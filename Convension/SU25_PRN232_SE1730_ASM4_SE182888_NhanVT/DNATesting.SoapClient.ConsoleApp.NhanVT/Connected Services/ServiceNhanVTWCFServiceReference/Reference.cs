//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceNhanVTWCFServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServicesNhanVt", Namespace="http://tempuri.org/")]
    public partial class ServicesNhanVt : object
    {
        
        private System.Nullable<System.DateTime> CreatedDateField;
        
        private string DescriptionField;
        
        private System.Nullable<int> DurationField;
        
        private System.Nullable<bool> IsActiveField;
        
        private System.Nullable<bool> IsClinicVisitAllowedField;
        
        private System.Nullable<bool> IsHomeVisitAllowedField;
        
        private System.Nullable<bool> IsSelfSampleAllowedField;
        
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        private System.Nullable<decimal> PriceField;
        
        private System.Nullable<int> ProcessingTimeField;
        
        private int ServiceCategoryNhanVtidField;
        
        private string ServiceNameField;
        
        private System.Nullable<int> ServicesNhanVtidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this.CreatedDateField;
            }
            set
            {
                this.CreatedDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Duration
        {
            get
            {
                return this.DurationField;
            }
            set
            {
                this.DurationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                this.IsActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsClinicVisitAllowed
        {
            get
            {
                return this.IsClinicVisitAllowedField;
            }
            set
            {
                this.IsClinicVisitAllowedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsHomeVisitAllowed
        {
            get
            {
                return this.IsHomeVisitAllowedField;
            }
            set
            {
                this.IsHomeVisitAllowedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsSelfSampleAllowed
        {
            get
            {
                return this.IsSelfSampleAllowedField;
            }
            set
            {
                this.IsSelfSampleAllowedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return this.ModifiedDateField;
            }
            set
            {
                this.ModifiedDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProcessingTime
        {
            get
            {
                return this.ProcessingTimeField;
            }
            set
            {
                this.ProcessingTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceCategoryNhanVtid
        {
            get
            {
                return this.ServiceCategoryNhanVtidField;
            }
            set
            {
                this.ServiceCategoryNhanVtidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName
        {
            get
            {
                return this.ServiceNameField;
            }
            set
            {
                this.ServiceNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServicesNhanVtid
        {
            get
            {
                return this.ServicesNhanVtidField;
            }
            set
            {
                this.ServicesNhanVtidField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceCategoriesNhanVt", Namespace="http://schemas.datacontract.org/2004/07/DNATesting.SoapAPIServices.NhanVT.SoapMod" +
        "els")]
    public partial class ServiceCategoriesNhanVt : object
    {
        
        private string CategoryNameField;
        
        private System.Nullable<System.DateTime> CreatedDateField;
        
        private string DescriptionField;
        
        private System.Nullable<bool> IsActiveField;
        
        private System.Nullable<int> ServiceCategoryNhanVtidField;
        
        private ServiceNhanVTWCFServiceReference.ServicesNhanVt[] ServicesNhanVtsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName
        {
            get
            {
                return this.CategoryNameField;
            }
            set
            {
                this.CategoryNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this.CreatedDateField;
            }
            set
            {
                this.CreatedDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                this.IsActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServiceCategoryNhanVtid
        {
            get
            {
                return this.ServiceCategoryNhanVtidField;
            }
            set
            {
                this.ServiceCategoryNhanVtidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceNhanVTWCFServiceReference.ServicesNhanVt[] ServicesNhanVts
        {
            get
            {
                return this.ServicesNhanVtsField;
            }
            set
            {
                this.ServicesNhanVtsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceNhanVTWCFServiceReference.IServiceNhanVTSoapServices")]
    public interface IServiceNhanVTSoapServices
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVTSoapServices/GetServiceNhanVT", ReplyAction="http://tempuri.org/IServiceNhanVTSoapServices/GetServiceNhanVTResponse")]
        System.Threading.Tasks.Task<ServiceNhanVTWCFServiceReference.ServicesNhanVt[]> GetServiceNhanVTAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVTSoapServices/GetServiceNhanVTByID", ReplyAction="http://tempuri.org/IServiceNhanVTSoapServices/GetServiceNhanVTByIDResponse")]
        System.Threading.Tasks.Task<ServiceNhanVTWCFServiceReference.ServicesNhanVt> GetServiceNhanVTByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVTSoapServices/CreateServiceNhanVT", ReplyAction="http://tempuri.org/IServiceNhanVTSoapServices/CreateServiceNhanVTResponse")]
        System.Threading.Tasks.Task<int> CreateServiceNhanVTAsync(ServiceNhanVTWCFServiceReference.ServicesNhanVt dnaService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVTSoapServices/UpdateServiceNhanVT", ReplyAction="http://tempuri.org/IServiceNhanVTSoapServices/UpdateServiceNhanVTResponse")]
        System.Threading.Tasks.Task<int> UpdateServiceNhanVTAsync(ServiceNhanVTWCFServiceReference.ServicesNhanVt dnaService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVTSoapServices/DeleteServiceNhanVT", ReplyAction="http://tempuri.org/IServiceNhanVTSoapServices/DeleteServiceNhanVTResponse")]
        System.Threading.Tasks.Task<bool> DeleteServiceNhanVTAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVTSoapServices/GetServiceCategories", ReplyAction="http://tempuri.org/IServiceNhanVTSoapServices/GetServiceCategoriesResponse")]
        System.Threading.Tasks.Task<ServiceNhanVTWCFServiceReference.ServiceCategoriesNhanVt[]> GetServiceCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVTSoapServices/GetServiceCatgegoryNhanVTByID", ReplyAction="http://tempuri.org/IServiceNhanVTSoapServices/GetServiceCatgegoryNhanVTByIDRespon" +
            "se")]
        System.Threading.Tasks.Task<ServiceNhanVTWCFServiceReference.ServiceCategoriesNhanVt> GetServiceCatgegoryNhanVTByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVTSoapServices/CreateServiceCatgegoryNhanVT", ReplyAction="http://tempuri.org/IServiceNhanVTSoapServices/CreateServiceCatgegoryNhanVTRespons" +
            "e")]
        System.Threading.Tasks.Task<int> CreateServiceCatgegoryNhanVTAsync(ServiceNhanVTWCFServiceReference.ServiceCategoriesNhanVt dnaServiceCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVTSoapServices/UpdateServiceCatgegoryNhanVT", ReplyAction="http://tempuri.org/IServiceNhanVTSoapServices/UpdateServiceCatgegoryNhanVTRespons" +
            "e")]
        System.Threading.Tasks.Task<int> UpdateServiceCatgegoryNhanVTAsync(ServiceNhanVTWCFServiceReference.ServiceCategoriesNhanVt dnaServiceCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVTSoapServices/DeleteServiceCatgegoryNhanVT", ReplyAction="http://tempuri.org/IServiceNhanVTSoapServices/DeleteServiceCatgegoryNhanVTRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> DeleteServiceCatgegoryNhanVTAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public interface IServiceNhanVTSoapServicesChannel : ServiceNhanVTWCFServiceReference.IServiceNhanVTSoapServices, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public partial class ServiceNhanVTSoapServicesClient : System.ServiceModel.ClientBase<ServiceNhanVTWCFServiceReference.IServiceNhanVTSoapServices>, ServiceNhanVTWCFServiceReference.IServiceNhanVTSoapServices
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceNhanVTSoapServicesClient() : 
                base(ServiceNhanVTSoapServicesClient.GetDefaultBinding(), ServiceNhanVTSoapServicesClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServiceNhanVTSoapServices.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceNhanVTSoapServicesClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceNhanVTSoapServicesClient.GetBindingForEndpoint(endpointConfiguration), ServiceNhanVTSoapServicesClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceNhanVTSoapServicesClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceNhanVTSoapServicesClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceNhanVTSoapServicesClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceNhanVTSoapServicesClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceNhanVTSoapServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceNhanVTWCFServiceReference.ServicesNhanVt[]> GetServiceNhanVTAsync()
        {
            return base.Channel.GetServiceNhanVTAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceNhanVTWCFServiceReference.ServicesNhanVt> GetServiceNhanVTByIDAsync(int id)
        {
            return base.Channel.GetServiceNhanVTByIDAsync(id);
        }
        
        public System.Threading.Tasks.Task<int> CreateServiceNhanVTAsync(ServiceNhanVTWCFServiceReference.ServicesNhanVt dnaService)
        {
            return base.Channel.CreateServiceNhanVTAsync(dnaService);
        }
        
        public System.Threading.Tasks.Task<int> UpdateServiceNhanVTAsync(ServiceNhanVTWCFServiceReference.ServicesNhanVt dnaService)
        {
            return base.Channel.UpdateServiceNhanVTAsync(dnaService);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteServiceNhanVTAsync(int id)
        {
            return base.Channel.DeleteServiceNhanVTAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceNhanVTWCFServiceReference.ServiceCategoriesNhanVt[]> GetServiceCategoriesAsync()
        {
            return base.Channel.GetServiceCategoriesAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceNhanVTWCFServiceReference.ServiceCategoriesNhanVt> GetServiceCatgegoryNhanVTByIDAsync(int id)
        {
            return base.Channel.GetServiceCatgegoryNhanVTByIDAsync(id);
        }
        
        public System.Threading.Tasks.Task<int> CreateServiceCatgegoryNhanVTAsync(ServiceNhanVTWCFServiceReference.ServiceCategoriesNhanVt dnaServiceCategory)
        {
            return base.Channel.CreateServiceCatgegoryNhanVTAsync(dnaServiceCategory);
        }
        
        public System.Threading.Tasks.Task<int> UpdateServiceCatgegoryNhanVTAsync(ServiceNhanVTWCFServiceReference.ServiceCategoriesNhanVt dnaServiceCategory)
        {
            return base.Channel.UpdateServiceCatgegoryNhanVTAsync(dnaServiceCategory);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteServiceCatgegoryNhanVTAsync(int id)
        {
            return base.Channel.DeleteServiceCatgegoryNhanVTAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        #if !NET6_0_OR_GREATER
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        #endif
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceNhanVTSoapServices))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceNhanVTSoapServices))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:7030/ServiceNhanVT.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceNhanVTSoapServicesClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServiceNhanVTSoapServices);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceNhanVTSoapServicesClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServiceNhanVTSoapServices);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServiceNhanVTSoapServices,
        }
    }
}
